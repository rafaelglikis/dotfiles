[user]
	name = rafaelglikis
	email = rafaelglikis@gmail.com

[core]
	autocrlf = input

[alias]
	git = !exec git
    econf = config --global --edit
	# Log
    l = log --oneline
    lol = log --graph --decorate --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    last = !git --no-pager log -1 HEAD --stat
    last-hash = !git last | head -n1 | awk '{print $2}'
    lh = !git last-hash
    cp-last-hash = !git last-hash | tee /dev/tty | xclip -sel clip
    clh = !git cp-last-hash
	# Commit
    append = commit -a --amend --no-edit
    undo = reset HEAD~
	unpushed = log --branches --not --remotes
    # Branch
    fix = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
	hreset = reset --hard
	checkout-recent = !git checkout $(git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short)' --count 10 | fzf)
	cr = !git checkout-recent
    # Tagging
    retag = "!f() { git tag -f -a \"$1\" -m \"$1\" && git push origin \"$1\" -f; }; f"
    deltag = "!f() { git tag -d \"$1\" && git push --delete origin \"$1\"; }; f"
    next-tag-major = "!git tag --sort=-v:refname | head -n 1 | awk -F. -v OFS=. '{ sub(/^v/, \"\", $1); $1+=1; $2=0; $3=0; print \"v\"$0 }'"
    next-tag-minor = "!git tag --sort=-v:refname | head -n 1 | awk -F. -v OFS=. '{ sub(/^v/, \"\", $1); $2+=1; $3=0; print \"v\"$0 }'"
    next-tag-patch = "!git tag --sort=-v:refname | head -n 1 | awk -F. -v OFS=. '{ sub(/^v/, \"\", $1); $3+=1; print \"v\"$0 }'"
    next-tag = "!git next-tag-minor"
	# Diff
	dv = difftool -t vimdiff -y
	ds = diff --staged
	watch-diff = !watch -n 1 'git diff --color | less -R'
    browse = "!browse() { \
        branch=$(git symbolic-ref --short HEAD); \
        repo=$(git config --get remote.origin.url | sed 's/\\.git$//'); \
        if [ \"${repo#git@lw.}\" != \"$repo\" ];  then \
            repo=https://$(echo $repo | sed 's/:/\\//g' | sed 's/git@lw./\\//'); \
        fi; \
        if [ \"${repo#git@}\" != \"$repo\" ];  then \
            repo=https://$(echo $repo | sed 's/:/\\//g' | sed 's/git@/\\//'); \
        fi; \
        url=\"$repo/tree/$branch\"; \
        echo "Opening $url"; \
        echo $url | xclip -sel clip; \
        xdg-open \"$url\"; \
     }; browse"
    diff-web = "!diffweb() { \
        commit=${1:-$(git last-hash)}; \
        repo=$(git config --get remote.origin.url | sed 's/\\.git$//'); \
        if [ \"${repo#git@lw.gitlab.com}\" != \"$repo\" ]; then \
            repo=https://$(echo $repo | sed 's/:/\\//g' | sed 's/git@lw./\\//'); \
        fi; \
        if [ \"${repo#git@gitlab.com}\" != \"$repo\" ]; then \
            repo=https://$(echo $repo | sed 's/:/\\//g' | sed 's/git@/\\//'); \
        fi; \
        if [ \"${repo#git@github.com}\" != \"$repo\" ]; then \
            repo=https://$(echo $repo | sed 's/:/\\//g' | sed 's/git@/\\//'); \
        fi; \
        url=\"$repo/commit/$commit\"; \
        echo \"Opening $url\"; \
        xdg-open \"$url\"; \
    }; diffweb"
    # Misc
    st = status -sb
    pr = pull --rebase
	fp = push --force
    fap = fetch --all --prune
	parent = "!git checkout $(git rev-parse --abbrev-ref HEAD | awk -F\"--\" 'NF{NF--; print $0}' OFS=\"--\")"
	back = "!f() { git checkout HEAD~${1:-1}; }; f"
    ls-tags = "!git tag --list -n1 | sort -Vr | less"
	children = "!f() { git branch --list --color=never \"$1*\" --all | fzf --prompt=\"Select a branch: \" | xargs git checkout; }; f $(git rev-parse --abbrev-ref HEAD)"
	cleannup = !git add . && git stash save \"CLEANUP\"
	pipelines = "!f() { \
	    remote=$(git remote -v | grep learnworlds | head -1 | awk \"{ print \\$2 }\"); \
	    group=$(echo \"$remote\" | awk -F\"/\" \"{ print \\$2 }\" | sed \"s/.git//\"); \
	    repo=$(basename \"$PWD\"); \
        xdg-open \"https://gitlab.com/learnworlds/$group/$repo/-/pipelines\"; \
    }; f"
[color]
  branch = always
  diff = auto
  grep = always
  interactive = always
  pager = true
  showbranch = auto
  status = auto
  ui = always

# git mergetool
[merge]
  tool = meld
	renameLimit = 0

[mergetool "meld"]
	cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"

[help]
	autocorrect = 1

[push]
	default = current
	followTags = true

[fetch]
	prune = true

[stash]
	showPatch = true

[log]
    date = relative
